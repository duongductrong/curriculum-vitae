{"version":3,"sources":["components/TextEffect/TextEffect.tsx","views/pages/Skills/components/BlockProgress.tsx","components/SpinnerProgress/SpinnerProgress.tsx","views/pages/Skills/Skills.tsx"],"names":["TextEffect","children","className","text","color","props","elementRef","useRef","blockRef","useEffect","split","forEach","element","current","classList","add","ref","map","txt","index","key","BlockProgress","name","progress","htmlFor","Progress","id","SpinnerProgress","defaultProps","MY_SKILL_DEFINE","Skills","createAnimation","animation","duration","init","increase","timeUnit","skill"],"mappings":"yJAmDeA,IAxCyB,SAAC,GAMlC,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACGC,EACC,uDACEC,EAAkBC,iBAAO,MACzBC,EAAgBD,iBAAO,MAgB7B,OAdAE,qBAAU,WACJP,IACO,OAATA,QAAS,IAATA,KAAWQ,MAAM,KAAKC,SAAQ,SAACC,GAC7BN,EAAWO,QAAQC,UAAUC,IAAIH,OAKjCR,GACFI,EAASK,QAAQC,UAAUC,IAA3B,uBAA+CX,MAGhD,IAGD,0BAAMY,IAAKR,IACJ,OAAJL,QAAI,IAAJA,OAAA,EAAAA,EAAMO,MAAM,IAAIO,KAAI,SAACC,EAAKC,GAAN,OACnB,wCACEC,IAAG,UAAKD,EAAL,eACCd,EAFN,CAGEW,IAAKV,EACLJ,UAAU,gBAETgB,QAECjB,K,0IC5BGoB,EAT0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACvC,yBAAKrB,UAAU,gBACb,2BAAOA,UAAU,mBAAmBsB,QAASF,GAC1CA,GAEH,kBAACG,EAAA,EAAD,CAAUC,GAAIJ,EAAMC,SAAUA,M,gBCJ5BI,G,MAA4C,SAAC,GAK5C,IAJLJ,EAII,EAJJA,SACArB,EAGI,EAHJA,UACAD,EAEI,EAFJA,SACGI,EACC,mDACEC,EAAmBC,iBAAO,MAUhC,OARAE,qBAAU,WACJP,IACO,OAATA,QAAS,IAATA,KAAWQ,MAAM,KAAKC,SAAQ,SAACC,GAC7BN,EAAWO,QAAQC,UAAUC,IAAIH,SAGpC,IAGD,uCAAKI,IAAKV,GAAgBD,EAA1B,CAAiCH,UAAU,qBACxCD,EADH,cACiBsB,EAAQ,UAAMA,EAAN,KAAoB,OAKjDI,EAAgBC,aAAe,CAC7BL,SAAU,EACVrB,UAAW,IAGEyB,Q,QC9BTE,EAAkB,CACtB,CAAEP,KAAM,eAAgBC,SAAU,IAClC,CAAED,KAAM,oBAAqBC,SAAU,IACvC,CAAED,KAAM,0BAA2BC,SAAU,IAC7C,CAAED,KAAM,kBAAmBC,SAAU,IACrC,CAAED,KAAM,QAASC,SAAU,IAC3B,CAAED,KAAM,YAAaC,SAAU,IAC/B,CAAED,KAAM,+BAAgCC,SAAU,KA2ErCO,UAxEf,WA0BE,OAxBArB,qBAAU,WAERsB,YAAgB,CACdnB,QAAS,gBACToB,UAAW,YACXC,SAAU,CACRC,KAAM,EACNC,SAAU,IAEZC,SAAU,MAIZL,YAAgB,CACdnB,QAAS,6BACToB,UAAW,YACXC,SAAU,CACRC,KAAM,EACNC,SAAU,IAEZC,SAAU,QAEX,IAGD,yBAAKlC,UAAU,UACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,sCACX,kBAACF,EAAA,EAAD,CAAYI,MAAM,QAAQD,KAAK,kBAGlC,uBAAGD,UAAU,6BACX,4HAE4B,6BAC1B,6BAHF,4KASJ,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,2BAAd,wBACA,6BACG2B,EAAgBZ,KAAI,SAACoB,EAAOlB,GAAR,OACnB,kBAAC,EAAD,CACEC,IAAKD,EACLG,KAAMe,EAAMf,KACZC,SAAUc,EAAMd,cAGpB,6BACA,wBAAIrB,UAAU,wBAAd,gBACA,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAiBA,UAAU,6BACzB,mCAEF,kBAAC,EAAD,CAAiBA,UAAU,6BACzB,wCAEF,kBAAC,EAAD,CAAiBA,UAAU,6BACzB","file":"static/js/3.1721f692.chunk.js","sourcesContent":["import React, { FC, ReactNode, useRef, useEffect } from \"react\";\r\nimport \"./text-effect.scss\";\r\n\r\nexport interface TextEffectProps\r\n  extends Omit<React.HTMLAttributes<HTMLSpanElement>, \"className\"> {\r\n  children?: ReactNode | undefined;\r\n  className?: string | undefined;\r\n  text?: string | undefined;\r\n  color?: string | undefined;\r\n}\r\n\r\nconst TextEffect: FC<TextEffectProps> = ({\r\n  children,\r\n  className,\r\n  text,\r\n  color,\r\n  ...props\r\n}) => {\r\n  const elementRef: any = useRef(null);\r\n  const blockRef: any = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (className) {\r\n      className?.split(\" \").forEach((element: String) => {\r\n        elementRef.current.classList.add(element);\r\n      });\r\n    }\r\n\r\n    // testing\r\n    if (color) {\r\n      blockRef.current.classList.add(`text-effect--${color}`);\r\n    }\r\n    // testing\r\n  }, []);\r\n\r\n  return (\r\n    <span ref={blockRef}>\r\n      {text?.split(\"\").map((txt, index) => (\r\n        <span\r\n          key={`${index}-txtEffect`}\r\n          {...props}\r\n          ref={elementRef}\r\n          className=\"text-effect\"\r\n        >\r\n          {txt}\r\n        </span>\r\n      )) || children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TextEffect;\r\n","import React, { FC } from \"react\";\r\nimport Progress from \"../../../../components/Progress/Progress\";\r\n\r\ninterface BlockProgress\r\n  extends Omit<React.HTMLAttributes<HTMLElement>, \"name\" | \"progress\"> {\r\n  name: string;\r\n  progress: number;\r\n}\r\n\r\nconst BlockProgress: FC<BlockProgress> = ({ name, progress }) => (\r\n  <div className=\"skills__show\">\r\n    <label className=\"skills__show__lb\" htmlFor={name}>\r\n      {name}\r\n    </label>\r\n    <Progress id={name} progress={progress} />\r\n  </div>\r\n);\r\n\r\nexport default BlockProgress;\r\n","import React, { FC, ReactNode, useEffect, useRef } from \"react\";\r\nimport \"./spinner-progress.scss\";\r\n\r\nexport interface SpinnerProgressProps\r\n  extends Omit<React.HTMLAttributes<HTMLElement>, \"className\"> {\r\n  className?: string | undefined;\r\n  progress?: number | undefined;\r\n  children?: ReactNode | undefined;\r\n}\r\n\r\nconst SpinnerProgress: FC<SpinnerProgressProps> = ({\r\n  progress,\r\n  className,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const elementRef : any = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (className) {\r\n      className?.split(\" \").forEach((element: String) => {\r\n        elementRef.current.classList.add(element)\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={elementRef} {...props} className=\"spinner-progress\">\r\n      {children} {`${progress ? `${progress}%` : \"\"}`}\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerProgress.defaultProps = {\r\n  progress: 0,\r\n  className: \"\",\r\n};\r\n\r\nexport default SpinnerProgress;\r\n","import React, { useEffect } from \"react\";\r\nimport TextEffect from \"../../../components/TextEffect/TextEffect\";\r\nimport BlockProgress from \"./components/BlockProgress\";\r\n\r\nimport \"./skills.scss\";\r\nimport SpinnerProgress from \"../../../components/SpinnerProgress/SpinnerProgress\";\r\nimport createAnimation from \"../../../core/plugins/animation.plugin\";\r\n\r\nconst MY_SKILL_DEFINE = [\r\n  { name: \"HTML / HTML5\", progress: 80 },\r\n  { name: \"CSS / CSS3 / SASS\", progress: 70 },\r\n  { name: \"JavaScript / Typescript\", progress: 60 },\r\n  { name: \"ReactJS / Redux\", progress: 60 },\r\n  { name: \"Vuejs\", progress: 45 },\r\n  { name: \"Angular 9\", progress: 45 },\r\n  { name: \"English for reading document\", progress: 35 },\r\n];\r\n\r\nfunction Skills() {\r\n\r\n  useEffect(() => {\r\n    // animation for skill language using js/ts module\r\n    createAnimation({\r\n      element: \".skills__show\",\r\n      animation: \"fromRight\",\r\n      duration: {\r\n        init: 1,\r\n        increase: 0.2,\r\n      },\r\n      timeUnit: \"s\"\r\n    })\r\n\r\n    // other skill animation\r\n    createAnimation({\r\n      element: \".skills__right__box__skill\",\r\n      animation: \"fromRight\",\r\n      duration: {\r\n        init: 1,\r\n        increase: 0.5,\r\n      },\r\n      timeUnit: \"s\"\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"skills\">\r\n      <div className=\"skills__left\">\r\n        <h1 className=\"skills__left__title skills--flarge\">\r\n          {<TextEffect color=\"green\" text=\"About_Skills\" />}\r\n        </h1>\r\n\r\n        <p className=\"skills__left__description\">\r\n          <i>\r\n            I am a very dedicated and inspired individual who trained myself to\r\n            be a front-end developer. <br />\r\n            <br />I have had experience with several frameworks/libraries such\r\n            as Angular, ReactJS, VueJS. Since most of my projects are made with\r\n            ReactJS, I am very confident with it.\r\n          </i>\r\n        </p>\r\n      </div>\r\n      <div className=\"skills__right\">\r\n        <h1 className=\"skills__right__language\">Language Programming</h1>\r\n        <div>\r\n          {MY_SKILL_DEFINE.map((skill, index) => (\r\n            <BlockProgress\r\n              key={index}\r\n              name={skill.name}\r\n              progress={skill.progress}\r\n            />\r\n          ))}\r\n          <br />\r\n          <h1 className=\"skills__right__other\">Others Skill</h1>\r\n          <div className=\"skills__right__box\">\r\n            <SpinnerProgress className=\"skills__right__box__skill\">\r\n              <b>Git</b>\r\n            </SpinnerProgress>\r\n            <SpinnerProgress className=\"skills__right__box__skill\">\r\n              <b>Teamwork</b>\r\n            </SpinnerProgress>\r\n            <SpinnerProgress className=\"skills__right__box__skill\">\r\n              <b>Restful API</b>\r\n            </SpinnerProgress>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n"],"sourceRoot":""}